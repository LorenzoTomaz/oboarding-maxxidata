{"version":3,"sources":["containers/logo.svg","components/members/member/memberDrawer.js","components/members/member/member.js","components/type-members/type-member/typeMemberDrawer.js","components/header/header.js","components/modal/modal.js","components/members/members.js","components/type-members/type-member/type-member.js","components/modal/typeModal.js","components/type-members/type-members.js","containers/App.js","reportWebVitals.js","store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Option","Select","openNotificationWithIcon","type","title","msg","notification","message","description","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","connect","state","members","typeMembers","dispatch","addMembers","data","addTypeMembers","props","react_default","a","createElement","drawer","width","onClose","visible","bodyStyle","paddingBottom","footer","style","textAlign","es_form","Object","assign","name","onFinish","values","axios","post","nome","member","telefone","phone","type_member_id","endereco","address","situacao","status","then","res","catch","err","console","log","row","gutter","col","Item","label","rules","input","es_select","placeholder","value","TextArea","objectSpread","offset","es_button","htmlType","gridStyle","Card","Meta","card","actions","EllipsisOutlined","key","onClick","showModal","Grid","descricao","typeMemberDrawer_Option","Sider","Layout","Header","Content","Footer","SubMenu","Menu","SiderDemo","_useState","useState","collapsed","_useState2","slicedToArray","collapsedState","setcollapsedState","className","justify","theme","background","opacity","pull","menu","id","mode","avatar","icon","UserOutlined","minHeight","collapsible","onCollapse","PlusOutlined","addMember","TeamOutlined","addTypeMember","children","memberDrawer","typeMemberDrawer","tVisible","tOnClose","modal","Fragment","es_modal","onOk","handleOk","onCancel","map","members_member_member","clicked","editData","components_modal_modal","modalData","memberType","r","Math","random","toString","substring","concat","type_member","typeModal","App","mVisible","mTVisible","settingClick","_this","setState","settingTypeClick","showDrawer","showTypeDrawer","showTypeModal","e","handleTypeOk","handleCancel","handleTypeCancel","_this2","this","get","items","newMembers","newTypeMembers","_this3","header_header","App_Content","margin","divider","components_members_members","index","type_members","Component","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","arguments","length","undefined","action","store","createStore","ReactDOM","render","es","src_containers_App","document","getElementById"],"mappings":"+JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,kXCKhCC,EAAWC,IAAXD,OACFE,EAA2B,SAACC,EAAMC,EAAOC,GAC7CC,IAAaH,GAAM,CACjBI,QAASH,EACTI,YAAaH,KAGXI,EAAS,CACXC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAmB,CACvBC,SAAU,wBACVC,MAAO,CACLC,MAAO,iCACPC,OAAQ,mCAEVA,OAAQ,CACNC,MAAO,+CA8HEC,cAZS,SAAAC,GACpB,MAAO,CACLC,QAASD,EAAMC,QACfC,YAAaF,EAAME,cAGE,SAAAC,GACzB,MAAO,CACLC,WAAY,SAACC,GAAD,OAAUF,EAAS,CAACpB,KAAM,cAAesB,KAAMA,KAC3DC,eAAgB,SAACD,GAAD,OAAUF,EAAS,CAACpB,KAAM,mBAAoBsB,KAAMA,OAGzDN,CA3HI,SAACQ,GAWhB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE3B,MAAOuB,EAAMvB,MACb4B,MAAO,IACPC,QAASN,EAAMM,QACfC,QAASP,EAAMO,QACfC,UAAW,CAAEC,cAAe,IAC5BC,OACET,EAAAC,EAAAC,cAAA,OACEQ,MAAO,CACLC,UAAW,YAMfX,EAAAC,EAAAC,cAACU,EAAA,EAADC,OAAAC,OAAA,GAAUjC,EAAV,CAAkBkC,KAAK,gBAAgBC,SA1B5B,SAACC,GAChBC,IAAMC,KAAK,uCAAwC,CAACC,KAAMH,EAAOI,OAAON,KAAM3B,MAAO6B,EAAOI,OAAOjC,MAAOkC,SAAUL,EAAOI,OAAOE,MAAOC,eAAgB,EAAGC,SAAUR,EAAOI,OAAOK,QAASC,SAAUV,EAAOI,OAAOO,SAASC,KAAK,SAAAC,GACjO/B,EAAMH,WAAWkC,EAAIjC,MACrBvB,EAAyB,UAAW,eAAgB,+CACpDyB,EAAMM,YACL0B,MAAM,SAAAC,GACP1D,EAAyB,QAAS,QAAS,kCAC3CyB,EAAMM,UACN4B,QAAQC,IAAIF,MAkBiD/C,iBAAkBA,IAC7Ee,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKC,OAAQ,IACXpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACLiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CACIvB,KAAM,CAAC,SAAU,QACjBwB,MAAM,OACNC,MAAO,CACP,CACItD,UAAU,KAIdc,EAAAC,EAAAC,cAACuC,EAAA,EAAD,QAGVzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACLiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CACIvB,KAAM,CAAC,SAAU,SACjBwB,MAAM,QACNC,MAAO,CACP,CACIjE,KAAM,WAIVyB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,SAIZzC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKC,OAAQ,IACXpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACTiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CACIvB,KAAM,CAAC,SAAU,SACjBwB,MAAM,QACNC,MAAO,CACP,CACItD,UAAU,KAIdc,EAAAC,EAAAC,cAACuC,EAAA,EAAD,QAGNzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACTiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CACEvB,KAAM,CAAC,SAAU,eACjBwB,MAAM,cACNC,MAAO,CAAC,CAAEtD,UAAU,EAAMP,QAAS,0BAEnCqB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAQC,YAAY,eAClB3C,EAAAC,EAAAC,cAAC9B,EAAD,CAAQwE,MAAM,UAAd,UACA5C,EAAAC,EAAAC,cAAC9B,EAAD,CAAQwE,MAAM,YAAd,gBAKR5C,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKC,OAAQ,IACXpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACTiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CAAWvB,KAAM,CAAC,SAAU,WAAYwB,MAAM,WAC1CvC,EAAAC,EAAAC,cAACuC,EAAA,EAAMI,SAAP,QAGN7C,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACTiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CACEvB,KAAM,CAAC,SAAU,UACjBwB,MAAM,SACNC,MAAO,CAAC,CAAEtD,UAAU,EAAMP,QAAS,6BAEnCqB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAQC,YAAY,UAClB3C,EAAAC,EAAAC,cAAC9B,EAAD,CAAQwE,MAAM,UAAd,UACA5C,EAAAC,EAAAC,cAAC9B,EAAD,CAAQwE,MAAM,YAAd,gBAKJ5C,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CAAWtD,WAAU6B,OAAAiC,EAAA,EAAAjC,CAAA,GAAOhC,EAAOG,WAAd,CAA0B+D,OAAQ,KACnD/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAQzE,KAAK,UAAU0E,SAAS,UAAhC,iCCjIdC,EAAY,CACd9C,MAAO,OACPO,UAAW,UAmBAU,GAjBE8B,IAATC,KACO,SAACrD,GAGZ,OACIC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAM7E,MAAM,UACZkC,MAAO,CAAEN,MAAO,KAChBkD,QAAS,CACTtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAkBC,IAAI,WAAWC,QAAS1D,EAAM2D,cAIhD1D,EAAAC,EAAAC,cAACmD,EAAA,EAAKM,KAAN,CAAWjD,MAAOwC,GAAWlD,EAAAC,EAAAC,cAACmD,EAAA,EAAKM,KAAN,CAAWjD,MAAOwC,GAAYnD,EAAMgB,UCdjE3C,EAAWC,IAAXD,OACFE,EAA2B,SAACC,EAAMC,EAAOC,GAC7CC,IAAaH,GAAM,CACjBI,QAASH,EACTI,YAAaH,KAGXI,EAAS,CACXC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAmB,CACvBC,SAAU,wBACVC,MAAO,CACLC,MAAO,iCACPC,OAAQ,mCAEVA,OAAQ,CACNC,MAAO,+CAiFEC,cAZS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAMC,QACfC,YAAaF,EAAME,cAGI,SAAAC,GAC3B,MAAO,CACLC,WAAY,SAACC,GAAD,OAAUF,EAAS,CAACpB,KAAM,cAAesB,KAAMA,KAC3DC,eAAgB,SAACD,GAAD,OAAUF,EAAS,CAACpB,KAAM,mBAAoBsB,KAAMA,OAGvDN,CA9EI,SAACQ,GAYhB,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE3B,MAAOuB,EAAMvB,MACb4B,MAAO,IACPC,QAASN,EAAMM,QACfC,QAASP,EAAMO,QACfC,UAAW,CAAEC,cAAe,IAC5BC,OACET,EAAAC,EAAAC,cAAA,OACEQ,MAAO,CACLC,UAAW,YAMfX,EAAAC,EAAAC,cAACU,EAAA,EAADC,OAAAC,OAAA,GAAUjC,EAAV,CAAkBkC,KAAK,gBAAgBC,SA3BhC,SAACC,GAChBC,IAAMC,KAAK,4CAA6C,CAACQ,SAAUV,EAAOI,OAAOO,OAAQgC,UAAW3C,EAAOI,OAAOzC,cAAciD,KAAK,SAAAC,GACnI/B,EAAMD,eAAegC,EAAIjC,MACzBvB,EAAyB,UAAW,oBAAqB,qDACzDyB,EAAMM,YACL0B,MAAM,SAAAC,GACP1D,EAAyB,QAAS,QAAS,kCAC3CyB,EAAMM,UACN4B,QAAQC,IAAIF,MAmBqD/C,iBAAkBA,IAC7Ee,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKC,OAAQ,IACXpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACLiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CACIvB,KAAM,CAAC,SAAU,eACjBwB,MAAM,cACNC,MAAO,CACP,CACItD,UAAU,KAIdc,EAAAC,EAAAC,cAACuC,EAAA,EAAD,QAGVzC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKtD,KAAM,IACXiB,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CACIvB,KAAM,CAAC,SAAU,UACjBwB,MAAM,SACNC,MAAO,CAAC,CAAEtD,UAAU,EAAMP,QAAS,6BAEnCqB,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAQC,YAAY,UAClB3C,EAAAC,EAAAC,cAAC2D,EAAD,CAAQjB,MAAM,UAAd,UACA5C,EAAAC,EAAAC,cAAC2D,EAAD,CAAQjB,MAAM,YAAd,gBAMJ5C,EAAAC,EAAAC,cAACU,EAAA,EAAK0B,KAAN,CAAWtD,WAAU6B,OAAAiC,EAAA,EAAAjC,CAAA,GAAOhC,EAAOG,WAAd,CAA0B+D,OAAQ,KACnD/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAQzE,KAAK,UAAU0E,SAAS,UAAhC,wBCxEaa,UAAUC,IAAnCC,OAAmCD,IAA3BE,QAA2BF,IAAlBG,OAAkBH,IAAVD,OACzBK,EAAYC,IAAZD,QA8CSE,EA5CC,SAACtE,GAAU,IAAAuE,EACmBC,mBAAS,CACnDC,WAAW,IAFYC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAyD,EAAA,GAClBK,EADkBF,EAAA,GACFG,EADEH,EAAA,GASjBD,EAAcG,EAAdH,UACR,OAEIxE,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,UAEX7E,EAAAC,EAAAC,cAACrB,EAAA,EAAD,KACImB,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAK2C,QAAQ,MAAMC,MAAM,OAAOrE,MAAO,CAACsE,WAAY,UAAWC,QAAS,SACpEjF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAK6C,KAAM,EAAGH,MAAM,QAChB/E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAG,OAAOL,MAAM,OAAOM,KAAK,cAC9BrF,EAAAC,EAAAC,cAACiF,EAAA,EAAK7C,KAAN,CAAYkB,IAAI,WAAUxD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAQC,KAAMvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,aAMxDxF,EAAAC,EAAAC,cAACrB,EAAA,EAAD,CAAQ6B,MAAO,CAAE+E,UAAW,UACxBzF,EAAAC,EAAAC,cAAC4D,EAAD,CAAO4B,aAAW,EAACtF,MAAM,MAAMoE,UAAWA,EAAWmB,WApB9C,SAAAnB,GACfI,EAAkB,CAACJ,gBAoBXxE,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,SACf7E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMJ,MAAM,OAAQM,KAAK,UACrBrF,EAAAC,EAAAC,cAACiE,EAAD,CAASX,IAAI,WAAW+B,KAAMvF,EAAAC,EAAAC,cAACsF,EAAA,EAAD,MAAkBhH,MAAM,WACtDwB,EAAAC,EAAAC,cAACiF,EAAA,EAAK7C,KAAN,CAAWkB,IAAI,YAAY+B,KAAMvF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,MAAkBnC,QAAS1D,EAAM8F,WAAlE,eAEA7F,EAAAC,EAAAC,cAACiE,EAAD,CAASX,IAAI,WAAW+B,KAAMvF,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,MAAkBtH,MAAM,gBACtDwB,EAAAC,EAAAC,cAACiF,EAAA,EAAK7C,KAAN,CAAWkB,IAAI,WAAW+B,KAAMvF,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,MAAkBnC,QAAS1D,EAAMgG,eAAjE,sBAIHhG,EAAMiG,SACPhG,EAAAC,EAAAC,cAAC+F,EAAD,CAAYzH,MAAOuB,EAAMvB,MAAO8B,QAASP,EAAMO,QAASD,QAASN,EAAMM,UACvEL,EAAAC,EAAAC,cAACgG,EAAD,CAAgB1H,MAAOuB,EAAMvB,MAAO8B,QAASP,EAAMoG,SAAU9F,QAASN,EAAMqG,uBCrC7EC,EAlBD,SAACtG,GACX,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqG,SAAA,KACEtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACE/H,MAAOuB,EAAMvB,MACb8B,QAASP,EAAMO,QACfkG,KAAMzG,EAAM0G,SACZC,SAAU3G,EAAM2G,UAEd1G,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAsBH,EAAMF,KAAKuF,IACpCpF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wBAAwBH,EAAMF,KAAKuB,MACtCpB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,yBAAyBH,EAAMF,KAAKT,OACvCY,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAA0BH,EAAMF,KAAK8B,UACxC3B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,2BAA2BH,EAAMF,KAAK4B,aCQtChC,EAlBC,SAACM,GAGb,OAFAkC,QAAQC,IAAI,cACZD,QAAQC,IAAInC,EAAMF,MAGdE,EAAMF,KAAK8G,IAAK,SAAAtF,GAGZ,OAFAY,QAAQC,IAAI,UACZD,QAAQC,IAAIb,GAEVrB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKmB,IAAKnC,EAAO+D,GAAIP,UAAU,aAAa9F,KAAM,GAAIgE,OAAQ,GAAK+B,QAAQ,UACzE9E,EAAAC,EAAAC,cAAC0G,EAAD,CAASC,QAAS9G,EAAM8G,QAASC,SAAU,kBAAM/G,EAAM+G,SAASzF,IAASN,KAAMM,EAAOD,KAAMsC,UAAW,kBAAM3D,EAAMsG,MAAMhF,MACzHrB,EAAAC,EAAAC,cAAC6G,EAAD,CAAOzG,QAASP,EAAMO,QAASmG,SAAU1G,EAAM0G,SAAUC,SAAU3G,EAAM2G,SAAU7G,KAAME,EAAMiH,UAAWxI,MAAOuB,EAAMvB,QACvHwB,EAAAC,EAAAC,cAAA,eCdVgD,EAAY,CACd9C,MAAO,OACPO,UAAW,UAmBAsG,IAjBE9D,IAATC,KACW,SAACrD,GAGhB,OACIC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAM7E,MAAM,cACZkC,MAAO,CAAEN,MAAO,KAChBkD,QAAS,CACTtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAkBC,IAAI,WAAWC,QAAS1D,EAAM2D,cAIhD1D,EAAAC,EAAAC,cAACmD,EAAA,EAAKM,KAAN,CAAWjD,MAAOwC,GAAWlD,EAAAC,EAAAC,cAACmD,EAAA,EAAKM,KAAN,CAAWjD,MAAOwC,GAAYnD,EAAMgB,UCC1DsF,GAlBD,SAACtG,GAGX,OAFAkC,QAAQC,IAAI,cACZD,QAAQC,IAAInC,EAAMF,MAEhBG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqG,SAAA,KACEtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CACE/H,MAAOuB,EAAMvB,MACb8B,QAASP,EAAMO,QACfkG,KAAMzG,EAAM0G,SACZC,SAAU3G,EAAM2G,UAEd1G,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAsBH,EAAMF,KAAKuF,IACpCpF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,+BAA+BH,EAAMF,KAAK+D,WAC7C5D,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAA0BH,EAAMF,KAAK8B,aCSrCjC,GAnBK,SAACK,GAGjB,OAFAkC,QAAQC,IAAI,cACZD,QAAQC,IAAInC,EAAMF,MAGdE,EAAMF,KAAK8G,IAAK,SAAApI,GACZ0D,QAAQC,IAAI,QACZD,QAAQC,IAAI3D,GACZ,IAAI2I,EAAIC,KAAKC,SAASC,SAAS,IAAIC,UAAU,IAC7C,OACEtH,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAKmB,IAAG,GAAA+D,OAAKhJ,EAAK6G,GAAV,KAAAmC,OAAgBL,GAAKrC,UAAU,aAAa9F,KAAM,GAAIgE,OAAQ,GAAI+B,QAAQ,UAChF9E,EAAAC,EAAAC,cAACsH,GAAD,CAAYX,QAAS9G,EAAM8G,QAASC,SAAU,kBAAM/G,EAAM+G,SAASvI,IAAOwC,KAAMxC,EAAKqF,UAAWF,UAAW,kBAAM3D,EAAMsG,MAAM9H,MAC7HyB,EAAAC,EAAAC,cAACuH,GAAD,CAAOnH,QAASP,EAAMO,QAASmG,SAAU1G,EAAM0G,SAAUC,SAAU3G,EAAM2G,SAAU7G,KAAME,EAAMiH,UAAWxI,MAAOuB,EAAMvB,QACvHwB,EAAAC,EAAAC,cAAA,8dCL2B6D,IAAnCC,WAAQC,GAA2BF,IAA3BE,QAGVyD,IAHqC3D,IAAlBG,OAAkBH,IAAVD,MACbM,IAAZD,QACW9F,IAAXD,0MAENoB,MAAQ,CACNc,SAAS,EACTqH,UAAU,EACVC,WAAW,EACXzB,UAAU,EACVzG,YAAa,GACbD,QAAS,GAsCTuH,UAAW,MAwBba,aAAe,SAACxG,GACdyG,EAAKC,SAAS,CACZJ,UAAU,EACVX,UAAW3F,IAEbY,QAAQC,IAAI,gBACZD,QAAQC,IAAIb,MAEd2G,iBAAmB,SAACzJ,GAClBuJ,EAAKC,SAAS,CACZH,WAAW,EACXZ,UAAWzI,IAEb0D,QAAQC,IAAI,gBACZD,QAAQC,IAAI3D,MAEd0J,WAAa,WACXH,EAAKC,SAAS,CACZzH,SAAS,OAGb4H,eAAiB,WACfJ,EAAKC,SAAS,CACZ5B,UAAU,OAGd9F,QAAU,WACRyH,EAAKC,SAAS,CACZzH,SAAS,OAGb8F,SAAW,WACT0B,EAAKC,SAAS,CACZ5B,UAAU,OAIdzC,UAAY,WACVoE,EAAKC,SAAS,CACZJ,UAAU,OAGdQ,cAAgB,WACdL,EAAKC,SAAS,CACZH,WAAW,OAGfnB,SAAW,SAAA2B,GACTnG,QAAQC,IAAIkG,GACZN,EAAKC,SAAS,CACZJ,UAAU,OAGdU,aAAe,SAAAD,GACbnG,QAAQC,IAAIkG,GACZN,EAAKC,SAAS,CACZH,WAAW,OAGfU,aAAe,SAAAF,GACbnG,QAAQC,IAAIkG,GACZN,EAAKC,SAAS,CACZJ,UAAU,OAGdY,iBAAmB,SAAAH,GACjBnG,QAAQC,IAAIkG,GACZN,EAAKC,SAAS,CACZH,WAAW,uEA1FK,IAAAY,EAAAC,KAClBvH,IAAMwH,IAAI,wCACP7G,KAAK,SAAAC,GACJ,IAAMrC,EAAUqC,EAAIjC,KAAK8I,MACzB1G,QAAQC,IAAI,WACZD,QAAQC,IAAIzC,GACZ+I,EAAKzI,MAAM6I,WAAW9G,EAAIjC,KAAK8I,SAE9B5G,MAAM,SAAAC,GACPC,QAAQC,IAAIF,KAEhBd,IAAMwH,IAAI,6CACP7G,KAAK,SAAAC,GACJ,IAAMpC,EAAcoC,EAAIjC,KAAK8I,MAC7B1G,QAAQC,IAAI,eACZD,QAAQC,IAAIxC,GACZ8I,EAAKzI,MAAM8I,eAAe/G,EAAIjC,KAAK8I,SAClC5G,MAAM,SAAAC,GACPC,QAAQC,IAAIF,sCA2ET,IAAA8G,EAAAL,KAGP,OACEzI,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,OACf7E,EAAAC,EAAAC,cAAC6I,EAAD,CAASlD,UAAW4C,KAAKR,WAAazJ,MAAM,aAAa8B,QAASmI,KAAKjJ,MAAMc,QAASD,QAASoI,KAAKpI,QAAS8F,SAAUsC,KAAKjJ,MAAM2G,SAAUC,SAAUqC,KAAKrC,SAAUL,cAAe0C,KAAKP,gBACvLlI,EAAAC,EAAAC,cAACrB,EAAA,EAAD,KAEEmB,EAAAC,EAAAC,cAAC8I,GAAD,CAAStI,MAAO,CAAEuI,OAAQ,cAExBjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,gBACAlJ,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKC,OAAQ,GAAI0C,QAAQ,UACvB9E,EAAAC,EAAAC,cAACiJ,EAAD,CAAStC,QAAS4B,KAAKR,WAAYnB,SAAU,SAACsC,GAAD,OAAWN,EAAKjB,aAAauB,IAAQpC,UAAWyB,KAAKjJ,MAAMwH,UAAWnH,KAAM4I,KAAK1I,MAAMN,QAASa,QAASmI,KAAKjJ,MAAMmI,SAAUlB,SAAUgC,KAAKhC,SAAUC,SAAU+B,KAAKH,aAAc9J,MAAM,UAAU6H,MAAO,SAAC+C,GAAD,OAAWN,EAAKjB,aAAauB,OAEvRpJ,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,qBACAlJ,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKC,OAAQ,GAAI0C,QAAQ,UACvB9E,EAAAC,EAAAC,cAACmJ,GAAD,CAAaxC,QAAS4B,KAAKP,eAAgBpB,SAAU,SAACsC,GAAD,OAAWN,EAAKd,iBAAiBoB,IAAQpC,UAAWyB,KAAKjJ,MAAMwH,UAAWnH,KAAM4I,KAAK1I,MAAML,YAAaY,QAASmI,KAAKjJ,MAAMoI,UAAWnB,SAAUgC,KAAKJ,aAAc3B,SAAU+B,KAAKF,iBAAkB/J,MAAM,eAAe6H,MAAO,SAAC+C,GAAD,OAAWN,EAAKd,iBAAiBoB,kBA9JnTE,cAsLH/J,eAdS,SAAAC,GACtB,MAAO,CACLC,QAASD,EAAMC,QACfC,YAAaF,EAAME,cAGI,SAAAC,GACzB,MAAO,CACLC,WAAY,SAACC,GAAD,OAAUF,EAAS,CAACpB,KAAM,cAAesB,KAAMA,KAC3D+I,WAAY,SAAC/I,GAAD,OAAUF,EAAS,CAACpB,KAAM,cAAesB,KAAMA,KAC3DgJ,eAAgB,SAAChJ,GAAD,OAAUF,EAAS,CAACpB,KAAM,mBAAoBsB,KAAMA,KACpEC,eAAgB,SAACD,GAAD,OAAUF,EAAS,CAACpB,KAAM,mBAAoBsB,KAAMA,OAGzDN,CAA6CmI,IC3L7C6B,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCvL,EAAAkK,EAAA,GAAAvG,KAAA3D,EAAAwL,KAAA,WAAqB7H,KAAK,SAAA8H,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCNRS,GAAe,CACjBxK,QAAS,GACTC,YAAa,CAAE,CACX0F,GAAG,EACHxB,UAAW,MACXjC,SAAU,YAEV,CACIyD,GAAG,EACHxB,UAAW,MACXjC,SAAU,cAuCPuI,GAlCC,WAAkC,IAAjC1K,EAAiC2K,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBF,GAAcK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,MAAoB,gBAAhBC,EAAO/L,MACP0D,QAAQC,IAAI,eACZD,QAAQC,IAAIoI,EAAOzK,MACZgB,OAAAiC,EAAA,EAAAjC,CAAA,GACArB,EADP,CAEIC,QAASD,EAAMC,QAAQ8H,OAAO+C,EAAOzK,SAGzB,qBAAhByK,EAAO/L,KACAsC,OAAAiC,EAAA,EAAAjC,CAAA,GACArB,EADP,CAEIE,YAAaF,EAAME,YAAY6H,OAAO+C,EAAOzK,QAGjC,gBAAhByK,EAAO/L,MACP0D,QAAQC,IAAI,eACZD,QAAQC,IAAIoI,EAAOzK,MACZgB,OAAAiC,EAAA,EAAAjC,CAAA,GACArB,EADP,CAEIC,QAAS6K,EAAOzK,QAGJ,qBAAhByK,EAAO/L,MACP0D,QAAQC,IAAI,eACZD,QAAQC,IAAIoI,EAAOzK,MACZgB,OAAAiC,EAAA,EAAAjC,CAAA,GACArB,EADP,CAEIE,YAAa4K,EAAOzK,QAGrBL,GCvCL+K,GAAQC,YAAYN,IAI1BO,IAASC,OACL1K,EAAAC,EAAAC,cAACyK,EAAA,EAAD,CAAUJ,MAAOA,IACfvK,EAAAC,EAAAC,cAAC0K,GAAD,OAEJC,SAASC,eAAe,SAM1BvB","file":"static/js/main.5915fe03.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\nimport { Drawer, Form, Button, InputNumber, Col, Row, Input, Select, DatePicker, notification, Space  } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nconst { Option } = Select;\nconst openNotificationWithIcon = (type, title, msg) => {\n  notification[type]({\n    message: title,\n    description: msg,\n  });\n};\nconst layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!',\n      number: '${label} is not a valid number!',\n    },\n    number: {\n      range: '${label} must be between ${min} and ${max}',\n    },\n  };\nconst drawerForm = (props) => {\n      const onFinish = (values) => {\n        axios.post('http://localhost:3000/api/v1/members', {nome: values.member.name, email: values.member.email, telefone: values.member.phone, type_member_id: 1, endereco: values.member.address, situacao: values.member.status}).then(res => {\n          props.addMembers(res.data);\n          openNotificationWithIcon('success', 'Member Added', 'A new member was added to this application!');\n          props.onClose()\n        }).catch(err => {\n          openNotificationWithIcon('error', 'Error', 'Please, submit this form later');\n          props.onClose()\n          console.log(err)});\n      };\n    return (\n        <Drawer\n          title={props.title}\n          width={720}\n          onClose={props.onClose}\n          visible={props.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n            </div>\n          }\n        >\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n            <Row gutter={16}>\n              <Col span={12}>\n                    <Form.Item\n                        name={['member', 'name']}\n                        label=\"Name\"\n                        rules={[\n                        {\n                            required: true,\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n              </Col>\n              <Col span={12}>\n                    <Form.Item\n                        name={['member', 'email']}\n                        label=\"Email\"\n                        rules={[\n                        {\n                            type: 'email',\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                    name={['member', 'phone']}\n                    label=\"Phone\"\n                    rules={[\n                    {\n                        required: true\n                    },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name={['member', 'type_member']}\n                  label=\"Member Type\"\n                  rules={[{ required: true, message: 'Select a member type' }]}\n                >\n                  <Select placeholder=\"Member Type\">\n                    <Option value=\"active\">Active</Option>\n                    <Option value=\"inactive\">Inactive</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item name={['member', 'address']} label=\"Address\">\n                    <Input.TextArea />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name={['member', 'status']}\n                  label=\"Status\"\n                  rules={[{ required: true, message: 'Select one valid Status' }]}\n                >\n                  <Select placeholder=\"Status\">\n                    <Option value=\"active\">Active</Option>\n                    <Option value=\"inactive\">Inactive</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Drawer>\n    );\n}\nconst mapStateToProps = state => {\n    return {\n      members: state.members,\n      typeMembers: state.typeMembers\n    }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMembers: (data) => dispatch({type: 'ADD_MEMBERS', data: data}),\n    addTypeMembers: (data) => dispatch({type: 'ADD_TYPE_MEMBERS', data: data})\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(drawerForm);\n/* class DrawerForm extends React.Component {\n  state = { visible: false };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Button type=\"primary\" onClick={this.showDrawer}>\n          <PlusOutlined /> New account\n        </Button>\n        <Drawer\n          title=\"Create a new account\"\n          width={720}\n          onClose={this.onClose}\n          visible={this.state.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button onClick={this.onClose} type=\"primary\">\n                Submit\n              </Button>\n            </div>\n          }\n        >\n          <Form layout=\"vertical\" hideRequiredMark>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"name\"\n                  label=\"Name\"\n                  rules={[{ required: true, message: 'Please enter user name' }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name=\"url\"\n                  label=\"Url\"\n                  rules={[{ required: true, message: 'Please enter url' }]}\n                >\n                  <Input\n                    style={{ width: '100%' }}\n                    addonBefore=\"http://\"\n                    addonAfter=\".com\"\n                    placeholder=\"Please enter url\"\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"owner\"\n                  label=\"Owner\"\n                  rules={[{ required: true, message: 'Please select an owner' }]}\n                >\n                  <Select placeholder=\"Please select an owner\">\n                    <Option value=\"xiao\">Xiaoxiao Fu</Option>\n                    <Option value=\"mao\">Maomao Zhou</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name=\"type\"\n                  label=\"Type\"\n                  rules={[{ required: true, message: 'Please choose the type' }]}\n                >\n                  <Select placeholder=\"Please choose the type\">\n                    <Option value=\"private\">Private</Option>\n                    <Option value=\"public\">Public</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"approver\"\n                  label=\"Approver\"\n                  rules={[{ required: true, message: 'Please choose the approver' }]}\n                >\n                  <Select placeholder=\"Please choose the approver\">\n                    <Option value=\"jack\">Jack Ma</Option>\n                    <Option value=\"tom\">Tom Liu</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name=\"dateTime\"\n                  label=\"DateTime\"\n                  rules={[{ required: true, message: 'Please choose the dateTime' }]}\n                >\n                  <DatePicker.RangePicker\n                    style={{ width: '100%' }}\n                    getPopupContainer={trigger => trigger.parentElement}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={24}>\n                <Form.Item\n                  name=\"description\"\n                  label=\"Description\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'please enter url description',\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<DrawerForm />, mountNode); */","import React from 'react';\nimport { Card, Avatar } from 'antd';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst gridStyle = {\n    width: '100%',\n    textAlign: 'center',\n  };\nconst { Meta } = Card;\nconst member = (props) => {\n    /* console.log('props');\n    console.log(props); */\n    return (\n        <Card title=\"Members\"\n        style={{ width: 350}}\n        actions={[\n        <EllipsisOutlined key=\"ellipsis\" onClick={props.showModal}/>\n        ]}\n    >\n\n        <Card.Grid style={gridStyle}><Card.Grid style={gridStyle}>{props.name}</Card.Grid></Card.Grid>\n        </Card>\n    );\n}\n\nexport default member;","import React, {Component} from 'react';\nimport { Drawer, Form, Button, InputNumber, Col, Row, Input, Select, DatePicker, notification, Space } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport member from '../../members/member/member';\nconst { Option } = Select;\nconst openNotificationWithIcon = (type, title, msg) => {\n  notification[type]({\n    message: title,\n    description: msg,\n  });\n};\nconst layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\n  const validateMessages = {\n    required: '${label} is required!',\n    types: {\n      email: '${label} is not a valid email!',\n      number: '${label} is not a valid number!',\n    },\n    number: {\n      range: '${label} must be between ${min} and ${max}',\n    },\n  };\nconst drawerForm = (props) => {\n  const onFinish = (values) => {\n    axios.post('http://localhost:3000/api/v1/type_members', {situacao: values.member.status, descricao: values.member.description}).then(res => {\n      props.addTypeMembers(res.data);\n      openNotificationWithIcon('success', 'Member Type Added', 'A new  member type was added to this application!');\n      props.onClose()\n    }).catch(err => {\n      openNotificationWithIcon('error', 'Error', 'Please, submit this form later');\n      props.onClose()\n      console.log(err)\n    });\n  };\n    return (\n        <Drawer\n          title={props.title}\n          width={720}\n          onClose={props.onClose}\n          visible={props.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n            </div>\n          }\n        >\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish} validateMessages={validateMessages}>\n            <Row gutter={16}>\n              <Col span={12}>\n                    <Form.Item\n                        name={['member', 'description']}\n                        label=\"Description\"\n                        rules={[\n                        {\n                            required: true,\n                        },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n              </Col>\n              <Col span={12}>\n              <Form.Item\n                  name={['member', 'status']}\n                  label=\"Status\"\n                  rules={[{ required: true, message: 'Select one valid Status' }]}\n                >\n                  <Select placeholder=\"Status\">\n                    <Option value=\"active\">Active</Option>\n                    <Option value=\"inactive\">Inactive</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n\n                <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        </Drawer>\n    );\n}\nconst mapStateToProps = state => {\n  return {\n    members: state.members,\n    typeMembers: state.typeMembers\n  }\n}\nconst mapDispatchToProps = dispatch => {\nreturn {\n  addMembers: (data) => dispatch({type: 'ADD_MEMBERS', data: data}),\n  addTypeMembers: (data) => dispatch({type: 'ADD_TYPE_MEMBERS', data: data})\n}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(drawerForm);\n/* class DrawerForm extends React.Component {\n  state = { visible: false };\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Button type=\"primary\" onClick={this.showDrawer}>\n          <PlusOutlined /> New account\n        </Button>\n        <Drawer\n          title=\"Create a new account\"\n          width={720}\n          onClose={this.onClose}\n          visible={this.state.visible}\n          bodyStyle={{ paddingBottom: 80 }}\n          footer={\n            <div\n              style={{\n                textAlign: 'right',\n              }}\n            >\n              <Button onClick={this.onClose} style={{ marginRight: 8 }}>\n                Cancel\n              </Button>\n              <Button onClick={this.onClose} type=\"primary\">\n                Submit\n              </Button>\n            </div>\n          }\n        >\n          <Form layout=\"vertical\" hideRequiredMark>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"name\"\n                  label=\"Name\"\n                  rules={[{ required: true, message: 'Please enter user name' }]}\n                >\n                  <Input placeholder=\"Please enter user name\" />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name=\"url\"\n                  label=\"Url\"\n                  rules={[{ required: true, message: 'Please enter url' }]}\n                >\n                  <Input\n                    style={{ width: '100%' }}\n                    addonBefore=\"http://\"\n                    addonAfter=\".com\"\n                    placeholder=\"Please enter url\"\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"owner\"\n                  label=\"Owner\"\n                  rules={[{ required: true, message: 'Please select an owner' }]}\n                >\n                  <Select placeholder=\"Please select an owner\">\n                    <Option value=\"xiao\">Xiaoxiao Fu</Option>\n                    <Option value=\"mao\">Maomao Zhou</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name=\"type\"\n                  label=\"Type\"\n                  rules={[{ required: true, message: 'Please choose the type' }]}\n                >\n                  <Select placeholder=\"Please choose the type\">\n                    <Option value=\"private\">Private</Option>\n                    <Option value=\"public\">Public</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item\n                  name=\"approver\"\n                  label=\"Approver\"\n                  rules={[{ required: true, message: 'Please choose the approver' }]}\n                >\n                  <Select placeholder=\"Please choose the approver\">\n                    <Option value=\"jack\">Jack Ma</Option>\n                    <Option value=\"tom\">Tom Liu</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  name=\"dateTime\"\n                  label=\"DateTime\"\n                  rules={[{ required: true, message: 'Please choose the dateTime' }]}\n                >\n                  <DatePicker.RangePicker\n                    style={{ width: '100%' }}\n                    getPopupContainer={trigger => trigger.parentElement}\n                  />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={24}>\n                <Form.Item\n                  name=\"description\"\n                  label=\"Description\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'please enter url description',\n                    },\n                  ]}\n                >\n                  <Input.TextArea rows={4} placeholder=\"please enter url description\" />\n                </Form.Item>\n              </Col>\n            </Row>\n          </Form>\n        </Drawer>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<DrawerForm />, mountNode); */","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport {\n    HomeOutlined,\n    SettingFilled,\n    SmileOutlined,\n    SyncOutlined,\n    LoadingOutlined,\n    PlusOutlined,\n    UserOutlined,\n    TeamOutlined,\n    UsergroupDeleteOutlined\n  } from '@ant-design/icons';\nimport DrawerForm from '../members/member/memberDrawer';\nimport DrawerTypeForm from '../type-members/type-member/typeMemberDrawer';\nimport { Layout, Menu, Breadcrumb, Col, Row, Avatar } from 'antd';\nimport './header.css';\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst SiderDemo = (props) => {\n    const [collapsedState, setcollapsedState] = useState({\n      collapsed: false\n    })\n\n    const onCollapse = collapsed => {\n        setcollapsedState({collapsed});\n    };\n\n    const { collapsed } = collapsedState;\n    return (\n\n        <div className=\"Header\">\n\n            <Layout>\n                <Row justify=\"end\" theme=\"dark\" style={{background: '#001529', opacity: '0.98'}}>\n                    <Col pull={1} theme=\"dark\">\n                        <Menu id=\"xxxx\" theme=\"dark\" mode=\"horizontal\">\n                            <Menu.Item  key=\"1545454\"><Avatar icon={<UserOutlined />} /></Menu.Item>\n                        </Menu>\n                    </Col>\n                </Row>\n            </Layout>\n\n            <Layout style={{ minHeight: '100vh'}}>\n                <Sider collapsible width=\"250\" collapsed={collapsed} onCollapse={onCollapse}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\"  mode=\"inline\">\n                    <SubMenu key=\"01545454\" icon={<UserOutlined />} title=\"Members\">\n                    <Menu.Item key=\"222165456\" icon={<PlusOutlined />} onClick={props.addMember}>Add Member</Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"31111554\" icon={<TeamOutlined />} title=\"Members Type\">\n                    <Menu.Item key=\"58989898\" icon={<PlusOutlined />} onClick={props.addTypeMember}>Add Member Type</Menu.Item>\n                    </SubMenu>\n                </Menu>\n                </Sider>\n                {props.children}\n                <DrawerForm title={props.title} visible={props.visible} onClose={props.onClose}></DrawerForm>\n                <DrawerTypeForm title={props.title} visible={props.tVisible} onClose={props.tOnClose}></DrawerTypeForm>\n            </Layout>\n        </div>\n    );\n}\n\n  export default SiderDemo;\n\n/* class SiderDemo extends React.Component {\n  const [collapsedState, setcollapsedState] = useState({\n    collapsed: false\n  })\n\n  onCollapse = collapsed => {\n    console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const { collapsed } = this.state;\n    return (\n\n        <div>\n\n            <Layout>\n                <Menu id=\"xxxx\" theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                    <Row justify=\"end\">\n                        <Col pull={1}>\n                            <Menu.Item key=\"1\"><Avatar icon={<UserOutlined />} /></Menu.Item>\n                        </Col>\n                    </Row>\n                </Menu>\n            </Layout>\n\n            <Layout style={{ minHeight: '100vh' }}>\n                <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n                <div className=\"logo\" />\n                <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                    <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Members\">\n                    <Menu.Item key=\"1\" icon={<UserOutlined />}>Members</Menu.Item>\n                    <Menu.Item key=\"2\" icon={<PlusOutlined />} onClick={props.addMember}>Add Member</Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Members Type\">\n                    <Menu.Item key=\"3\" icon={<UsergroupDeleteOutlined />}>Members Type</Menu.Item>\n                    <Menu.Item key=\"4\" icon={<PlusOutlined />}>Add Member Type</Menu.Item>\n                    </SubMenu>\n                </Menu>\n                </Sider>\n                {this.props.children}\n                <DrawerForm title={props.title} visible={props.visible} onClose={props.onClose}></DrawerForm>\n            </Layout>\n        </div>\n    );\n  }\n}\n\nexport default SiderDemo; */","import React from 'react';\nimport { Modal, Button } from 'antd';\n\nconst modal = (props) => {\n    return (\n      <>\n        <Modal\n          title={props.title}\n          visible={props.visible}\n          onOk={props.handleOk}\n          onCancel={props.onCancel}\n        >\n            <p><strong>id: </strong>{props.data.id}</p>\n            <p><strong>name: </strong>{props.data.nome}</p>\n            <p><strong>email: </strong>{props.data.email}</p>\n            <p><strong>status: </strong>{props.data.situacao}</p>\n            <p><strong>address: </strong>{props.data.endereco}</p>\n        </Modal>\n      </>\n    );\n}\nexport default modal;","import React from 'react';\nimport Member from './member/member';\nimport Modal from '../modal/modal';\nimport { Layout, Menu, Breadcrumb, Drawer,Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\n\n\nconst members = (props) => {\n    console.log('props.data');\n    console.log(props.data);\n    return (\n\n        props.data.map( member => {\n            console.log('member');\n            console.log(member);\n            return (\n              <Col key={member.id} className=\"gutter-row\" span={24} offset={12}  justify=\"center\">\n                <Member  clicked={props.clicked} editData={() => props.editData(member)} name={member.nome} showModal={() => props.modal(member)}></Member>\n                <Modal visible={props.visible} handleOk={props.handleOk} onCancel={props.onCancel} data={props.modalData} title={props.title}></Modal>\n                <br></br>\n              </Col>\n        )})\n    )\n}\n\nexport default members;","import React from 'react';\nimport { Card, Avatar } from 'antd';\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\n\nconst gridStyle = {\n    width: '100%',\n    textAlign: 'center',\n  };\nconst { Meta } = Card;\nconst memberType = (props) => {\n    /* console.log('props');\n    console.log(props); */\n    return (\n        <Card title=\"Member Type\"\n        style={{ width: 350}}\n        actions={[\n        <EllipsisOutlined key=\"ellipsis\" onClick={props.showModal}/>\n        ]}\n    >\n\n        <Card.Grid style={gridStyle}><Card.Grid style={gridStyle}>{props.name}</Card.Grid></Card.Grid>\n        </Card>\n    );\n}\n\nexport default memberType;","import React from 'react';\nimport { Modal, Button } from 'antd';\n\nconst modal = (props) => {\n    console.log('props.data');\n    console.log(props.data);\n    return (\n      <>\n        <Modal\n          title={props.title}\n          visible={props.visible}\n          onOk={props.handleOk}\n          onCancel={props.onCancel}\n        >\n            <p><strong>id: </strong>{props.data.id}</p>\n            <p><strong>description: </strong>{props.data.descricao}</p>\n            <p><strong>status: </strong>{props.data.situacao}</p>\n        </Modal>\n      </>\n    );\n}\nexport default modal;","import React from 'react';\nimport TypeMember from './type-member/type-member';\nimport Modal from '../modal/typeModal';\nimport { Layout, Menu, Breadcrumb, Drawer,Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\n\n\nconst typeMembers = (props) => {\n    console.log('props.data');\n    console.log(props.data);\n    return (\n\n        props.data.map( type => {\n            console.log('type');\n            console.log(type);\n            let r = Math.random().toString(36).substring(10);\n            return (\n              <Col key={`${type.id}_${r}`} className=\"gutter-row\" span={24} offset={12} justify=\"center\">\n                <TypeMember clicked={props.clicked} editData={() => props.editData(type)} name={type.descricao} showModal={() => props.modal(type)}></TypeMember>\n                <Modal visible={props.visible} handleOk={props.handleOk} onCancel={props.onCancel} data={props.modalData} title={props.title}></Modal>\n                <br></br>\n              </Col>\n        )})\n    )\n}\n\nexport default typeMembers;","\nimport React, {Component} from 'react';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Layout, Menu, Breadcrumb, Divider, Drawer,Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport Headers from '../components/header/header';\nimport { connect } from 'react-redux';\nimport Members from '../components/members/members';\nimport Member from '../components/members/member/member';\nimport TypeMembers from '../components/type-members/type-members';\nimport DrawerForm from '../components/members/member/memberDrawer';\nimport Modal from '../components/modal/modal';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nconst { Option } = Select;\nclass App extends Component {\n  state = {\n    visible: false,\n    mVisible: false,\n    mTVisible: false,\n    tVisible: false,\n    typeMembers: [],\n    members: [\n     /*  {\n        id: 1,\n        nome: 'lorenzo',\n        telefone: '982289585',\n        email: 'modeaslz@gmail.com',\n        type_member_id: 2,\n        endereco: 'rua do norte 345',\n        situacao: 'ativo'\n      },\n      {\n        id: 2,\n        nome: 'morgana',\n        telefone: '982289585',\n        email: 'modeaslz@gmail.com',\n        type_member_id: 2,\n        endereco: 'rua do norte 345',\n        situacao: 'ativo'\n      },\n      {\n        id: 3,\n        nome: 'agatha',\n        telefone: '982289585',\n        email: 'modeaslz@gmail.com',\n        type_member_id: 2,\n        endereco: 'rua do norte 345',\n        situacao: 'ativo'\n      },\n      {\n        id: 4,\n        nome: 'marcia',\n        telefone: '982289585',\n        email: 'modeaslz@gmail.com',\n        type_member_id: 1,\n        endereco: 'rua do norte 345',\n        situacao: 'ativo'\n      } */\n    ],\n    modalData: {}\n  };\n  componentDidMount() {\n    axios.get('http://localhost:3000/api/v1/members')\n      .then(res => {\n        const members = res.data.items;\n        console.log('members');\n        console.log(members);\n        this.props.newMembers(res.data.items)\n\n      }).catch(err => {\n        console.log(err);\n      })\n    axios.get('http://localhost:3000/api/v1/type_members')\n      .then(res => {\n        const typeMembers = res.data.items;\n        console.log('typeMembers');\n        console.log(typeMembers);\n        this.props.newTypeMembers(res.data.items)\n      }).catch(err => {\n        console.log(err);\n      })\n  }\n\n  settingClick = (member) => {\n    this.setState({\n      mVisible: true,\n      modalData: member\n    });\n    console.log('settingClick');\n    console.log(member);\n  };\n  settingTypeClick = (type) => {\n    this.setState({\n      mTVisible: true,\n      modalData: type\n    });\n    console.log('settingClick');\n    console.log(type);\n  };\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n  showTypeDrawer = () => {\n    this.setState({\n      tVisible: true,\n    });\n  };\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  tOnClose = () => {\n    this.setState({\n      tVisible: false,\n    });\n  };\n\n  showModal = () => {\n    this.setState({\n      mVisible: true,\n    });\n  };\n  showTypeModal = () => {\n    this.setState({\n      mTVisible: true,\n    });\n  };\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      mVisible: false,\n    });\n  };\n  handleTypeOk = e => {\n    console.log(e);\n    this.setState({\n      mTVisible: false,\n    });\n  };\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      mVisible: false,\n    });\n  };\n  handleTypeCancel = e => {\n    console.log(e);\n    this.setState({\n      mTVisible: false,\n    });\n  };\n  render() {\n    /* console.log('this.state.members');\n    console.log(this.state.members); */\n    return (\n      <div className=\"App\">\n      <Headers addMember={this.showDrawer}  title=\"Add Member\" visible={this.state.visible} onClose={this.onClose} tVisible={this.state.tVisible} tOnClose={this.tOnClose} addTypeMember={this.showTypeDrawer}>\n        <Layout>\n\n          <Content style={{ margin: '10px 16px' }}>\n\n            <Divider>Members</Divider>\n            <Row gutter={24} justify=\"center\">\n              <Members clicked={this.showDrawer} editData={(index) => this.settingClick(index)} modalData={this.state.modalData} data={this.props.members} visible={this.state.mVisible} handleOk={this.handleOk} onCancel={this.handleCancel} title=\"Members\" modal={(index) => this.settingClick(index)}></Members>\n            </Row>\n            <br></br>\n            <br></br>\n            <Divider>Type Members</Divider>\n            <Row gutter={24} justify=\"center\">\n              <TypeMembers clicked={this.showTypeDrawer} editData={(index) => this.settingTypeClick(index)} modalData={this.state.modalData} data={this.props.typeMembers} visible={this.state.mTVisible} handleOk={this.handleTypeOk} onCancel={this.handleTypeCancel} title=\"Type Members\" modal={(index) => this.settingTypeClick(index)}></TypeMembers>\n            </Row>\n              {/* <DrawerForm title=\"Edit Member\" visible={this.state.visible} onClose={this.onClose} ></DrawerForm> */}\n          </Content>\n        </Layout>\n      </Headers>\n    </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    members: state.members,\n    typeMembers: state.typeMembers\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    addMembers: (data) => dispatch({type: 'ADD_MEMBERS', data: data}),\n    newMembers: (data) => dispatch({type: 'NEW_MEMBERS', data: data}),\n    newTypeMembers: (data) => dispatch({type: 'NEW_TYPE_MEMBERS', data: data}),\n    addTypeMembers: (data) => dispatch({type: 'ADD_TYPE_MEMBERS', data: data})\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initialState = {\n    members: [],\n    typeMembers: [ {\n        id:1,\n        descricao: 'kkk',\n        situacao: 'kjkjkjkj'\n        },\n        {\n            id:2,\n            descricao: 'NNN',\n            situacao: 'kjkjkjkj'\n        }\n    ]\n}\n\nconst reducer = (state = initialState, action) => {\n    if (action.type === 'ADD_MEMBERS') {\n        console.log('action.data');\n        console.log(action.data);\n        return {\n            ...state,\n            members: state.members.concat(action.data)\n        }\n    }\n    if (action.type === 'ADD_TYPE_MEMBERS') {\n        return {\n            ...state,\n            typeMembers: state.typeMembers.concat(action.data)\n        }\n    }\n    if (action.type === 'NEW_MEMBERS') {\n        console.log('action.data');\n        console.log(action.data);\n        return {\n            ...state,\n            members: action.data\n        }\n    }\n    if (action.type === 'NEW_TYPE_MEMBERS') {\n        console.log('action.data');\n        console.log(action.data);\n        return {\n            ...state,\n            typeMembers: action.data\n        }\n    }\n    return state;\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer from './store/reducer'\nimport { Provider } from 'react-redux';\nconst store = createStore(reducer);\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}